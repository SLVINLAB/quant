install.packages(""dplyr"")
setwd('C:/Users/Jin/Desktop/Project')
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("quantmod")
install.packages("jsonlite")
install.packages("quantmod")
install.packages("ggplot2")
rm(list=ls())
library(dplyr)
library(tidyr)
library(PerformanceAnalytics)
library(quantmod)
library(jsonlite)
fn_dsf_17 = fromJSON("http://app.fnguide.com/apiex/api/dsf/dsf001?gicode=&fr_dt=20170101&to_dt=20171231")
memory.size
memory.size()
memory.limit()
load("C:/Users/Jin/Desktop/정리/data/dsf.RData")
devtools::install_github("rstudio/keras")
install.packages('devtools')
devtools::install_github("rstudio/keras")
devtools::install_github("rstudio/keras")
install.packages('devtools')
library(keras)
install_keras()
install.packages("reticulate")
devtools::install_github("rstudio/keras")
library(keras)
install_keras()
getwd()
setwd("C:/Users/Jin/Desktop/Project")
setwd('C:/Users/Jin/Desktop/Project/Fnguide_api')
setwd('C:/Users/Jin/Desktop/Project/Study')
rm(list=ls())
library(dplyr)
library(tidyr)
setwd('C:/Users/Jin/Desktop/Project/Study')
install.packages("e1071")
rm(list=ls())
library(dplyr)
library(tidyr)
library(1071)
setwd('C:/Users/Jin/Desktop/Project/Study')
head(iris,5)
attach(iris)
x <- subset(iris, select=-Species)
y <- Species
svm_model <- svm(Species ~ ., data=iris)
summary(svm_model)
library(e1071)
svm_model <- svm(Species ~ ., data=iris)
summary(svm_model)
rm(list=ls())
library(dplyr)
library(tidyr)
library(e1071)
setwd('C:/Users/Jin/Desktop/Project/Study')
rm(list=ls())
library(dplyr)
library(tidyr)
library(e1071)
setwd('C:/Users/Jin/Desktop/Project/Study')
head(iris,5)
attach(iris)
x <- subset(iris, select=-Species)
y <- Species
rm(list=ls())
library(dplyr)
library(tidyr)
library(e1071)
setwd('C:/Users/Jin/Desktop/Project/Study')
head(iris,5)
attach(iris)
x <- subset(iris, select=-Species)
y <- Species
svm_model <- svm(Species ~ ., data=iris)
summary(svm_model)
pred <- predict(svm_model1,x)
svm_model1 <- svm(x,y)
summary(svm_model1)
pred <- predict(svm_model1,x)
system.time(pred <- predict(svm_model1,x))
