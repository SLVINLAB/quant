D <- tryCatch(apply(C, 1, mean, na.rm = T) , error = function(err) NA)
D <- as.matrix(D)
AR <- cbind(AR, D)}
AR <- as.data.frame(AR)
# Last
A1 <- as.numeric()
i=3595
A <- as.numeric()
repeat {
i <- i+1
B = cbind(bond.R[2:nrow(bond.R),i], bond.R[2:nrow(bond.R),i+1])
A = cbind(A,B)
if (bond.R[1,i] != bond.R[1,i+1]) break
A = t(A)
A = unique(A)
A = t(A)
}
A = (A[,-ncol(A)])
A = as.matrix(A)
C <- as.numeric(A)
C <- matrix(C, nrow= nrow(A), ncol = ncol(A))
D <- tryCatch(apply(C, 1, mean, na.rm = T) , error = function(err) NA)
D <- as.matrix(D)
A1 <- cbind(A1, D)
AR <- cbind(AR, A1)
rownames(AR) = bond.R[2:nrow(bond.R),1]
stocks = bond.R[1,(index+1)]
colnames(index) = stocks[1,]
colnames(AR) = colnames(index)
AR.B = AR[,which(colnames(AR)%in%colnames(SUE))]
SUE.B = SUE[,which(colnames(SUE)%in%colnames(AR.B))]
SUE.B = SUE.B[,colnames(AR.B)]
SURGE.B = SURGE[,which(colnames(SUE)%in%colnames(AR.B))]
SURGE.B = SURGE.B[,colnames(AR.B)]
rownames(AR.B) = substr(rownames(AR.B), 1, 6)
Pre = read.csv(file.choose())
colnames(Pre) = substr(colnames(Pre), 1, 6)
Pre = Pre[,which(colnames(Pre)%in%colnames(SUE.B))]
Pre = Pre[,colnames(SUE.B)]
Pre = Pre[17:51,]
AR. = matrix(NA, nrow(Pre), ncol(Pre))
colnames(AR.) = colnames(Pre)
for (i in 1: nrow(AR.)) {
for (j in 1 : ncol(AR.)) {
if (is.na(Pre[i,j]==T)) {AR.[i,j] = NA
} else {AR.[i,j] <- AR[((which(Pre[i,j]==rownames(AR)))+1),j]
}
}}
View(AR.)
View(Pre)
View(AR)
View(AR.B)
AR. = matrix(NA, nrow(Pre), ncol(Pre))
colnames(AR.) = colnames(Pre)
for (i in 1: nrow(AR.)) {
for (j in 1 : ncol(AR.)) {
if (is.na(Pre[i,j]==T)) {AR.[i,j] = NA
} else {AR.[i,j] <- AR.B[((which(Pre[i,j]==rownames(AR.B)))+1),j]
}
}}
View(AR.)
SUE.B = SUE.B[1:(nrow(SUE)-17),]
SURGE.B = SURGE.B[1:(nrow(SUE)-17),]
SUE..B  <- SUE.B[5:nrow(SUE.B),]
SUE1.B <- SUE.B[4:(nrow(SUE.B)-1),]
SUE2.B <- SUE.B[3:(nrow(SUE.B)-2),]
SUE3.B <- SUE.B[2:(nrow(SUE.B)-3),]
SUE4.B <- SUE.B[1:(nrow(SUE.B)-4),]
SURGE..B  <- SURGE.B[5:nrow(SUE.B),]
SURGE1.B <- SURGE.B[4:(nrow(SUE.B)-1),]
SURGE2.B <- SURGE.B[3:(nrow(SUE.B)-2),]
SURGE3.B <- SURGE.B[2:(nrow(SUE.B)-3),]
SURGE4.B <- SURGE.B[1:(nrow(SUE.B)-4),]
SUE.t <- t(SUE..B)
SUE1.t <- t(SUE1.B)
SUE2.t <- t(SUE2.B)
SUE3.t <- t(SUE3.B)
SUE4.t <- t(SUE4.B)
SURGE.t <- t(SURGE..B)
SURGE1.t <- t(SURGE1.B)
SURGE2.t <- t(SURGE2.B)
SURGE3.t <- t(SURGE3.B)
SURGE4.t <- t(SURGE4.B)
AR.. <- t(AR.)
coef <- numeric()
for(i in 1:ncol(AR..)) {
D <- coef(lm(AR..[,i] ~ SUE.t[,i] + SURGE.t[,i] ))
coef <- cbind(coef,D)
}
coef.AR <- t(coef)
coef <- numeric()
for(i in 1:ncol(AR..)) {
D <- coef(lm(AR..[,i] ~ SUE1.t[,i] + SUE2.t[,i] + SUE3.t[,i] + SUE4.t[,i] +
SURGE1.t[,i] + SURGE2.t[,i] + SURGE3.t[,i] + SURGE4.t[,i] ))
coef <- cbind(coef,D)
}
coef.ARL <- t(coef)
mean(coef.AR[,2])
mean(coef.AR[,3])
mean(coef.AR[,2])/(sd(coef.AR[,2])/sqrt(35))
mean(coef.AR[,3])/(sd(coef.AR[,3])/sqrt(35))
mean(coef.ARL[,2])/(sd(coef.ARL[,2])/sqrt(34))
mean(coef.ARL[,3])/(sd(coef.ARL[,3])/sqrt(34))
mean(coef.ARL[,4])/(sd(coef.ARL[,4])/sqrt(34))
mean(coef.ARL[,5])/(sd(coef.ARL[,5])/sqrt(34))
mean(coef.ARL[,6])/(sd(coef.ARL[,6])/sqrt(34))
mean(coef.ARL[,7])/(sd(coef.ARL[,7])/sqrt(34))
mean(coef.ARL[,8])/(sd(coef.ARL[,8])/sqrt(34))
mean(coef.ARL[,9])/(sd(coef.ARL[,9])/sqrt(34))
mean(coef.ARL[,2])
mean(coef.ARL[,3])
mean(coef.ARL[,4])
mean(coef.ARL[,5])
mean(coef.ARL[,6])
mean(coef.ARL[,7])
mean(coef.ARL[,8])
mean(coef.ARL[,9])
mean(coef.AR[,2])
mean(coef.AR[,3])
mean(coef.AR[,2])/(sd(coef.AR[,2])/sqrt(35))
mean(coef.AR[,3])/(sd(coef.AR[,3])/sqrt(35))
coef <- numeric()
for(i in 1:ncol(SUE.t)) {
D <- coef(lm(SUE.t[,i] ~ SUE1.t[,i] + SUE2.t[,i] + SUE3.t[,i] +
SUE4.t[,i] + SURGE1.t[,i] + SURGE2.t[,i] + SURGE3.t[,i] + SURGE4.t[,i]))
coef <- cbind(coef,D)
}
coef.A <- t(coef)
mean(coef.A[,2])/(sd(coef.A[,2])/sqrt(51))
mean(coef.A[,3])/(sd(coef.A[,3])/sqrt(51))
mean(coef.A[,4])/(sd(coef.A[,4])/sqrt(51))
mean(coef.A[,5])/(sd(coef.A[,5])/sqrt(51))
mean(coef.A[,6])/(sd(coef.A[,6])/sqrt(51))
mean(coef.A[,7])/(sd(coef.A[,7])/sqrt(51))
mean(coef.A[,8])/(sd(coef.A[,8])/sqrt(51))
mean(coef.A[,9])/(sd(coef.A[,9])/sqrt(51))
mean(coef.A[,2])
mean(coef.A[,3])
mean(coef.A[,4])
mean(coef.A[,5])
mean(coef.A[,6])
mean(coef.A[,7])
mean(coef.A[,8])
mean(coef.A[,9])
AR6. = matrix(NA, nrow(Pre), ncol(Pre))
colnames(AR6.) = colnames(Pre)
for (i in 1: nrow(AR6.)) {
for (j in 1 : ncol(AR6.)) {
AR6.[i,j] <-tryCatch (Return.cumulative(AR.B[(which(Pre[i,j]==rownames(AR.B))+1):(which(Pre[i,j]==rownames(AR.B))+7),j]
,geometric = TRUE), error = function(err) NA )
}}
AR6.[AR6.==""] <- NA
AR6.[AR6.=="0"] <- NA
AR6.. <- t(AR6.)
coef <- numeric()
for(i in 1:ncol(AR6..)) {
D <- coef(lm(AR6..[,i] ~ SUE.t[,i] + SURGE.t[,i]))
coef <- cbind(coef,D)
}
coef.AR6 <- t(coef)
mean(coef.AR6[,2])
mean(coef.AR6[,3])
mean(coef.AR6[,2])/(sd(coef.AR6[,2])/sqrt(34))
mean(coef.AR6[,3])/(sd(coef.AR6[,3])/sqrt(34))
AR6. = matrix(NA, nrow(Pre), ncol(Pre))
colnames(AR6.) = colnames(Pre)
for (i in 1: nrow(AR6.)) {
for (j in 1 : ncol(AR6.)) {
AR6.[i,j] <-tryCatch (Return.cumulative(AR.B[(which(Pre[i,j]==rownames(AR.B))+1):(which(Pre[i,j]==rownames(AR.B))+4),j]
,geometric = TRUE), error = function(err) NA )
}}
AR6.[AR6.==""] <- NA
AR6.[AR6.=="0"] <- NA
AR6.. <- t(AR6.)
coef <- numeric()
for(i in 1:ncol(AR6..)) {
D <- coef(lm(AR6..[,i] ~ SUE.t[,i] + SURGE.t[,i]))
coef <- cbind(coef,D)
}
coef.AR6 <- t(coef)
mean(coef.AR6[,2])
mean(coef.AR6[,3])
mean(coef.AR6[,2])/(sd(coef.AR6[,2])/sqrt(34))
mean(coef.AR6[,3])/(sd(coef.AR6[,3])/sqrt(34))
rm(list=ls())
install.packages('dplyr')
a = read.csv(file.choose(),  header=F, stringsAsFactors = FALSE)
a[a==""] <- NA
View(a)
volume = as.numeric()
for (i in 0:(((ncol(a)-1)/3)-1)) {
A <- as.data.frame(a[3:nrow(a),(2+3*i)])
volume <- cbind(volume,A)
}
(((ncol(a)-1)/3)-1)
a[3:nrow(a),(2+3*i)]
volume = as.numeric()
for (i in 0:(((ncol(a)-1)/3)-1)) {
A <- as.data.frame(a[3:nrow(a),(2+3*i)])
volume <- cbind(volume,A)
}
volume = as.data.frame(volume)
View(volume)
volume = as.data.frame()
for (i in 0:(((ncol(a)-1)/3)-1)) {
A <- as.data.frame(a[3:nrow(a),(2+3*i)])
volume <- cbind(volume,A)
}
A <- as.data.frame(a[3:nrow(a),(2+3*i)])
volume <- cbind(volume,A)
volume <- cbind(volume,A)
volume = as.numeric()
volume <- cbind(volume,A)
volume <- cbind(A, volume)
A <- a[3:nrow(a),(2+3*i)]
volume <- cbind(volume, A)
volume = as.numeric()
for (i in 0:(((ncol(a)-1)/3)-1)) {
A <- a[3:nrow(a),(2+3*i)]
volume <- cbind(volume, A)
}
View(volume)
library(xts)
library(dplyr)
library(tidyr)
a = read.csv(file.choose(),  header=F, stringsAsFactors = FALSE)
a[a==""] <- NA
Date = read.csv(file.choose(),  header=F, stringsAsFactors = FALSE)
colnames(Date) = 'date'
Date1 = Date
volume = a[which(a[2,] == "거래량(주)")]
beta = a[which(a[2,] == "베타 (D,1Yr)")]
return = a[which(a[2,] == "수익률(%)")]
volume = volume[-2,]
beta = beta[-2,]
return = return[-2,]
colnames(volume) = volume[1,]
colnames(beta) = beta[1,]
colnames(return) = return[1,]
volume = volume[-1,]
beta = beta[-1,]
return = return[-1,]
rownames(volumes) = Date1$date
rownames(volume) = Date1$date
rownames(beta) = Date1$date
rownames(return) = Date1$date
View(return)
panel1 = volume %>% gather(stock, volume, -date)
panel1 = volume %>% gather(stock, volume, -date)
panel1 = volume %>% gather(stock, volume)
View(return)
View(volume)
View(panel1)
panel1 = volume %>% gather(stock, volume_day)
which(panel1$stock =='SK')
View(panel1)
ind = read.csv(file.choose())
rownames(ind) = ind$Date
ind = ind[,-1]
library(dplyr)
View(ind)
lag(ind, 1)
str(ind)
lag_ind = ind[-1,]
View(lag_ind)
ind = ind[-nrow(ind),]
logind = log(lag_ind/ind)
str(ind)
str(lag_ind)
logind1 = log(lag_ind$S.P /ind $S.P)
str(lag_ind)
ind = read.csv(file.choose())
rownames(ind) = ind$Date
ind = ind[,-1]
library(dplyr)
ind = ind[-nrow(ind),]
lag_ind = ind[-1,]
logind1 = log(lag_ind$S.P /ind $S.P)
logind = log(lag_ind /ind)
View(ind)
View(lag_ind)
View(ind)
nrow(ind)
ind = ind[-nrow(ind),]
logind = log(lag_ind/ind)
View(logind)
coef = lm(ind[7] ~ind[1] + ind[2] + ind[3])
coef = lm(ind[,7] ~ind[,1] + ind[,2] + ind[,3])
summary(coef)
View(logind)
logind=0
logind = log(lag_ind/ind)
logind==0
logind[logind==0] = NA
coef = lm(ind[,7] ~ind[,1] + ind[,2] + ind[,3])
summary(coef)
colnames(ind)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
logind = log(lag_ind/ind)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
logind = log(lag_ind/ind)
logind[logind==0] = NA
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P, data = logind)
summary(coef)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
colnames(ind)
logind$Vkospi = lag(logind$Vkospi, 1)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
View(ind)
View(logind)
logind = log(lag_ind/ind)
logind$Vkospi = lag(logind$Vkospi, 1)
View(logind)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
colnames(ind)
logind = log(lag_ind/ind)
logind[logind==0] = NA
logind$Vkospi = lag(logind$Vkospi, 1)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
summary(coef)
colnames(ind)
summary(logind)
install.packages(stargazer)
install.packages('stargazer')
library(stargazer)
stargazer(summary(logind))
summary(logind)
a=summary(logind)
stargazer(a)
as.data.frame(a)
stargazer(a)
View(a)
a = as.data.frame(a)
stargazer(a)
View(a)
stargazer(a)
a=summary(logind)
a=summary(logind)
a
write.csv(a, "g.csv")
quantile(logind)
quantile(logind, na.rm = T)
?sink
sink('output_daily.txt')
a=summary(logind)
a
sink()
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
b = summary(coef)
stargazer(b)
b$
stargazer(b$coefficients)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA, data = logind)
coef = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
b = coef
b
stargazer(b)
stargazer(b, type="text", out="reg_EPI_JI_70.txt")
stargazer(b, type="html", out="reg_EPI_JI_70.html")
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq, data = logind)
c = lm(Vkospi ~ Nasdaq + S.P + NYSE + NIKEI + CHINA + BRI, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
cor.test(logind)
cor.test(logind$Nasdaq, logind$S.P)
c = lm(Vkospi ~ Nasdaq + NIKEI + CHINA + BRI, data = logind)
summary(c)
cor.test(logind$Nasdaq, logind$S.P)
sink('cor.txt', append = T)
a = cor.test(logind$Vkospi, logind$Nasdaq)
a
a = cor.test(logind$Vkospi, logind$S.P)
a
a = cor.test(logind$Vkospi, logind$NYSE)
a
a = cor.test(logind$Vkospi, logind$NIKEI)
a
a = cor.test(logind$Vkospi, logind$CHINA)
a
a = cor.test(logind$Vkospi, logind$BRI)
a
sink()
sink('cor1.txt', append = T)
a = cor.test(logind$Nasdaq, logind$S.P)
a
a = cor.test(logind$Nasdaq, logind$NYSE)
a
a = cor.test(logind$Nasdaq, logind$NIKEI)
a
a = cor.test(logind$Nasdaq, logind$CHINA)
a
a = cor.test(logind$Nasdaq, logind$BRI)
a
sink()
sink('cor1.txt', append = T)
sink()
sink('cor2.txt', append = T)
a = cor.test(logind$S.P, logind$NYSE)
a
a = cor.test(logind$S.P, logind$NIKEI )
a
a = cor.test(logind$S.P, logind$CHINA )
a
a = cor.test(logind$S.P, logind$BRI )
a
sink()
a = cor.test(logind$NYSE, logind$NIKEI )
a
a = cor.test(logind$NYSE, logind$CHINA )
a
a = cor.test(logind$NYSE, logind$BRI )
a
a = cor.test(logind$NIKEI, logind$CHINA )
a
a = cor.test(logind$NIKEI, logind$BRI)
a
a = cor.test(logind$BRI, logind$CHINA)
a
ind = read.csv(file.choose())
rownames(ind) = ind$Date
ind = ind[,-1]
library(dplyr)
ind = ind[-nrow(ind),]
lag_ind = ind[-1,]
logind = log(lag_ind/ind)
logind[logind==0] = NA
ind = read.csv(file.choose())
rownames(ind) = ind$Date
ind = ind[,-1]
library(dplyr)
View(ind)
View(lag_ind)
lag_ind = ind[-1,]
ind = ind[-nrow(ind),]
logind = log(lag_ind/ind)
logind[logind==0] = NA
logind$Nasdaq = lag(logind$Nasdaq, 1)
logind$S.P = lag(logind$S.P, 1)
logind$NYSE = lag(logind$NYSE, 1)
logind$CHINA = lag(logind$CHINA, 1)
logind$BRI = lag(logind$BRI, 1)
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq, data = logind)
c = lm(Vkospi ~ Nasdaq + NIKEI + CHINA + BRI, data = logind)
library(stargazer)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq, data = logind)
c = lm(Vkospi ~ NYSE + NIKEI +CHINA + S.P + Nasdaq + BRI, data = logind)
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq, data = logind)
c = lm(Vkospi ~ NYSE + NIKEI +CHINA + S.P + Nasdaq + BRI, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
View(logind)
View(ind)
logind = log(lag_ind/ind)
View(logind)
logind$Nasdaq = lag(logind$Nasdaq, 1)
logind$S.P = lag(logind$S.P, 1)
logind$NYSE = lag(logind$NYSE, 1)
logind$CHINA = lag(logind$CHINA, 1)
logind$BRI = lag(logind$BRI, 1)
logind$NIKEI = lag(logind$NIKEI, 1)
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq, data = logind)
c = lm(Vkospi ~ NYSE + NIKEI + CHINA + S.P + Nasdaq + BRI, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
c = lm(Vkospi ~ NYSE + NIKEI + CHINA + BRI, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
c = lm(Vkospi ~ NYSE + NIKEI + CHINA + BRI, data = logind)
b =lm(Vkospi ~ NYSE + NIKEI + CHINA + BRI + S.P + Nasdaq, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
a = lm(Vkospi ~ NYSE + NIKEI + CHINA, data = logind)
b = lm(Vkospi ~ NYSE + NIKEI + CHINA + BRI, data = logind)
c =lm(Vkospi ~ NYSE + NIKEI + CHINA + BRI + S.P + Nasdaq, data = logind)
stargazer(a, b, c, type="html", out="reg_EPI_JI_70.html")
install.packages(installr)
install.packages('installr')
require(installr)
check.for.updates.R()
library(dplyr)
rm(list=ls())
library(xts)
library(dplyr)
library(tidyr)
setwd('C:/Users/Jin/Desktop/Revenue Surprises and Bond/Data')
#------------------------------------------------------------------------
a = read.csv('ivdata.csv',  header=F, stringsAsFactors = FALSE)
rm(list=ls())
setwd('C:/Users/Jin/Desktop/Bitcoin')
library(Quandl)
data = Quandl("BCHARTS/BITSTAMPUSD", api_key="bwp6zzuZ41Rxypx7M-ju", type="xts")
View(data)
